// Task 1A Cipher Text
#include<ctype.h>
#include<stdio.h>
#include<string.h>
int main(void)
{ int i,j,key,num; char b,a[20][20];
  scanf("%d %d",&num,&key);
  key=key%26;
  for(int i=0;i<=2*num;++i)
   gets(a[i]);
  for( i=0;i<=2*num;++i) 
   for(j=0;j<strlen(a[i]);j++)
   { b=a[i][j];
     if(i<=num)
	{ if(isalpha(a[i][j]))                                             //ENCRYPTION
      {a[i][j]+=key;                    
       if (isalpha (a[i][j]))
       {if(islower(a[i][j])!=islower(b))
        a[i][j]-=26;
	   }
     else if(isalpha(a[i][j])==0)
       a[i][j]-=26;
      }
	}
	else
	{if(isalpha(a[i][j]))                                             //DECRYPTION
      {a[i][j]-=key; 
       if (isalpha (a[i][j]))
       {if(islower(a[i][j])!=islower(b))
        a[i][j]+=26;
	   }
     else if(isalpha(a[i][j])==0)
       a[i][j]+=26;
      }
	}
   }      
  for( i=0;i<=2*num;++i) 	
   puts(a[i]);
 return 0;
}



//TASK 1B Elevator scheduling
#include <iostream>

using namespace std;

int n,a[50],b[50],c[50],r=0,distance=0;

int main(){
    int i=0,j=0,k=0,temp;
    cin>>n;
    do{
        scanf("%d%c", &a[r], &temp);
        r+=1; 
        }while(temp!='\n');
    
       for(i=0;i<r;i++)
       {                                                 //SORTING
        for(j=i+1;j<r;j++)
       {    if(a[i]>a[j])
            {   temp=a[i];
                a[i]=a[j];
                a[j]=temp;
            }
        }
    }
    b[0]=n;
    c[0]=n;
    for(i=0,j=1;i<r;i++)
       {if(a[i]>n)
        {   b[j]=a[i];
            j++;
        }    
    }
    for(i=r-1,k=1;i>=0;i--)
      { if(a[i]<n)  
        {   b[j]=a[i];
            j++;
            c[k]=a[i];
            k++;
        }    
    }
    for(i=0;i<r;i++)
    {  if(a[i]>n)
       {    c[k]=a[i];
            k++;
        }
    }
    for(i=0;i<r+1;i++)
    {  cout<<b[i]<<" ";
       if(i!=r)
       {if(b[i+1]-b[i]>0)
          distance+=(b[i+1]-b[i]);
        else
          distance+=(b[i]-b[i+1]);
            
       }
    }
    cout<<endl;
    for(i=0;i<r+1;i++){
        cout<<c[i]<<" ";
    }
    cout<<endl<<distance;
}
